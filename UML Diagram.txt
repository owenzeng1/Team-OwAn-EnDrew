// Team OwAn-EnDrew: Andrew Lin & Owen Zeng

//IMPLEMENTED CLASSES/METHODS
import cs1.Keyboard; //Allows user interaction

public class FireEmblem
    //Instance Vars
    private int level = 0; 
    private int gender = -1;
    private String playerName = "";
    
    //Methods
    public void play() //Primary method for game play 
    public static void main(String[] args) //Testing purposes
    
    
public interface Character
    abstract String nameOf;
    abstract int HP;
    abstract int ATK;
    abstract int DEF;
    abstract int MAG;
    abstract int RES;
    abstract int SKL;
    abstract int SPD;
    abstract int LUK;
    abstract int maxMovement;
    
    public void setHP(int newHP)//for mutating HP
    MUTATORS for all stats
    
    public int getHP()//for accessing HP
    ACCESSORS for all stats
    
    public void attack(Character attacker , Character defender)//    IN PROGRESS will handle the damage calcs and dealing


public class Archer implements Character //this is for all classes, not just archer
    setting the abstract variables in Character to stats specific to each class
    

public interface Axe //this applies to all weapons
    private String weaponType = "A";// L for lances and S for swords nothing for tomes, bows and staves
    abstract int might;
    abstract int hitRate;
    abstract int critRate;
    abstract int durability;
    public String getWeaponType() //returns weaponType to check for weapon advantage in the attack function
    public int getMight() //Accessors for all stats
    public void setHit(int newHit) //Mutators for all stats

public class Board {
    private final static int BOARD_SIZE = 8;
    private Tile[][] board;
    //Constructors - Initalizes Board
    public Board( ) - Initalizes Board of DEFAULT_SIZE
    public Board( int a ) - Intializes an a*a board
    //============================
    private int size() -returns size of the board 
    private void get( int r, int c ) //return the item at the specified row & column
    private boolean isEmpty( int r, int c ) //return true if this board is empty, false otherwise
    private Tile set( int r, int c, Tile newVal ) //overwrite item at specified row and column with newVal
    public String toString() //return String representation of this board
    public void populate() //Fills in the rest of the array datasets with Plains Tiles
    public void crtTerrain (int a, int b, int dim_x, int dim_y, int terrain) //Prints Different VAlues 
    public static void main( String[] args ) { //Tester

public class Tile {
    private int x_cor;
    private int y_cor;
    private boolean hasUnits;
    private int terrain;
    private String unit;
    //0- Nonexistant (need to initalize), 1-Plain, 2-Forest, 3-Desert, 4-Moutain, 5-Fort, 6-Rivers
    private static final String[] TERRAIN = {"Nothing","Plain", "Forest", "Desert", "Moutain", "Fort", "River"};
    private static final String[] TERRAINPIC = {"   ", "   "," O ", " - ", " ^ ", "[_]", " ~ "};
    //=======================DEFAULT CONSTRUCTORS====================
    public Tile() - Initalizes Tiles with x_cor, y_cor = 0, terrain = 0 
    public Tile(int x_cor, int y_cor) - Initalizes Tiles with x_cor, y_cor, terrain = 0
    public Tile(int x_cor, int y_cor, int terrain) - Initalizes Tiles with x_cor, y_cor, terrain 
    //==========================================================
    
    //======================ACCESORS============================
    public int getX_cor() 
    public int getY_cor() 
    public boolean getHasUnits() - Returns boolean of whether a unit exists
    public String getTerrain() - gets the terrain of the tile in its string name
    //=========================================================
    
    //======================MUTATORS===========================
    public int setTerrain(int terrain) //sets the terrain of the tile
    public String setUnit(String newUnit) //sets the unit of the tile
    //=========================================================
    public String getInfo() //Print out values of all instance variables
    public String toString() //Prints the Picture of the Terrain/Units on it 
    public static void main (String [] args) //For testing purposes
    
    //METHODS BEING IMPLEMENTED
    toString()-In Board.java
    
    
    //CLASSES/METHODS NOT YET IMPLEMENTED
    public class Shops() //Will be used in Tile.java
        -private String firstWeapon;
        -private String secondWeapon;
        -private String thirdWeapon;
        -public getWeapons() //Allows Characters to buy Weapons
    
    
