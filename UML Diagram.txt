// Team OwAn-EnDrew: Andrew Lin & Owen Zeng

//IMPLEMENTED CLASSES/METHODS
import cs1.Keyboard; //Allows user interaction

public class FireEmblem
    //Instance Vars
    private int level = 0; 
    private int gender = -1;
    private String playerName = "";
    
    //Methods
    public void play() //Primary method for game play 
    public static void main(String[] args) //Testing purposes
    
    
public abstract Character
    abstract String nameOf;
    abstract int HP;
    abstract int ATK;
    abstract int DEF;
    abstract int MAG;
    abstract int RES;
    abstract int SKL;
    abstract int SPD;
    abstract int LUK;
    abstract int maxMovement;
    ========================================
    MUTATORS for all stats
    public void setHP(int newHP)//for mutating HP
    ========================================
    ACCESSORS for all stats
    public int getHP()//for accessing HP
    ========================================
    public void attack(Character attacker , Character defender)//    IN PROGRESS will handle the damage calcs and dealing
    public static void main( String[] args )  //Tester

//Applies to all classes below
public class Archer extends Character
public class Knight extends Character
public class Cavalier extends Character
public class Healer extends Character
public class Lord extends Character
public class Mage extends Character
public class Myrmidon extends Character
    -setting the abstract variables in Character to stats specific to each class
    -public static void main( String[] args )  //Tester

public abstract Weapons; //Superclass for all weapons
    private abstract String weaponType;
    private abstract int might;
    private abstract int hitRate;
    private abstract int critRate;
    private abstract int durability;
    
//this applies to all weapons
public abstract Axe extends Weapons
public abstract Sword extends Weapons
public abstract Tomes extends Weapons
public abstract Bows extends Weapons
public abstract Staves extends Weapons
    private String weaponType = "A";// L for lances and S for swords nothing for tomes, bows and staves
    private abstract int might;
    private abstract int hitRate;
    private abstract int critRate;
    private abstract int durability;
    public String getWeaponType() //returns weaponType to check for weapon advantage in the attack function
    public int getMight() //Accessors for all stats
    public void setHit(int newHit) //Mutators for all stats
    public static void main( String[] args );  //Tester

//This applies to all weapons
public Bronze<Axe> extends <Axe>
public Iron<Axe> exetnds <Axe>
public Silver<Axe> extends <Axe>
public Steel<Axe> extends <Axe>
    -Instantiantes all the instance vars in the super class
    -Methods except main methods are the same for all classes.
    -public static void main( String[] args );  //Tester
    
public class Board 
    private final static int BOARD_SIZE = 8;
    private Tile[][] board;
    //Constructors - Initalizes Board
    public Board( ) - Initalizes Board of DEFAULT_SIZE
    public Board( int a ) - Intializes an a*a board
    //============================
    private int size() -returns size of the board 
    private void get( int r, int c ) //return the item at the specified row & column
    private boolean isEmpty( int r, int c ) //return true if this board is empty, false otherwise
    private Tile set( int r, int c, Tile newVal ) //overwrite item at specified row and column with newVal
    public String toString() //return String representation of this board
    public void populate() //Fills in the rest of the array datasets with Plains Tiles
    public void crtTerrain (int a, int b, int dim_x, int dim_y, int terrain) //Prints Different VAlues 
    public static void main( String[] args )  //Tester

public class Tile 
    private int x_cor;
    private int y_cor;
    private boolean hasUnits;
    private int terrain;
    private String unit;
    //0- Nonexistant (need to initalize), 1-Plain, 2-Forest, 3-Desert, 4-Moutain, 5-Fort, 6-Rivers
    private static final String[] TERRAIN = {"Nothing","Plain", "Forest", "Desert", "Moutain", "Fort", "River"};
    private static final String[] TERRAINPIC = {"   ", "   "," O ", " - ", " ^ ", "[_]", " ~ "};
    //=======================DEFAULT CONSTRUCTORS====================
    public Tile() - Initalizes Tiles with x_cor, y_cor = 0, terrain = 0 
    public Tile(int x_cor, int y_cor) - Initalizes Tiles with x_cor, y_cor, terrain = 0
    public Tile(int x_cor, int y_cor, int terrain) - Initalizes Tiles with x_cor, y_cor, terrain 
    //==========================================================
    
    //======================ACCESORS============================
    public int getX_cor() 
    public int getY_cor() 
    public boolean getHasUnits() - Returns boolean of whether a unit exists
    public String getTerrain() - gets the terrain of the tile in its string name
    //=========================================================
    
    //======================MUTATORS===========================
    public int setTerrain(int terrain) //sets the terrain of the tile
    public String setUnit(String newUnit) //sets the unit of the tile
    //=========================================================
    
    public String getInfo() //Print out values of all instance variables
    public String toString() //Prints the Picture of the Terrain/Units on it 
    public static void main (String [] args) //For testing purposes
    
    //METHODS BEING IMPLEMENTED
    toString()-In Board.java
    
    //CLASSES/METHODS NOT YET IMPLEMENTED
    public class Shops() //Will be used in Tile.java
        -private String firstWeapon;
        -private String secondWeapon;
        -private String thirdWeapon;
        -public getWeapons() //Allows Characters to buy Weapons
    
    
